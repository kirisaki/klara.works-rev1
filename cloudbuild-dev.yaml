steps:


# build & test server
- name: gcr.io/cloud-builders/gsutil
  id: Restore .cabal
  args:
  - cp
  - gs://${_NAME}-cache/cabal.tar.gz
  - /workspace/cabal.tar.gz

- name: 'haskell:8.8.2'
  id: Test & Build server
  entrypoint: /bin/sh
  args:
  - -c
  - |
      tar xzf cabal.tar.gz -C /builder/home/ &&\
      cd server && cabal update && cabal build &&\
      cabal test &&\
      cabal install --install-method=copy --installdir=dist &&\
      cd /builder/home && tar czf /workspace/cabal.tar.gz .cabal/

- name: gcr.io/cloud-builders/gsutil
  id: Store .cabal
  args:
  - cp
  - /workspace/cabal.tar.gz
  - gs://${_NAME}-cache/cabal.tar.gz


# build & push docker image
- name: gcr.io/cloud-builders/docker
  id: Build docker image
  args:
  - 'build'
  - '-t'
  - 'gcr.io/$PROJECT_ID/$_NAME:$SHORT_SHA'
  - '.'

- name: gcr.io/cloud-builders/docker
  id: Push docker image
  args:
  - 'push'
  - 'gcr.io/$PROJECT_ID/$_NAME:$SHORT_SHA'


# deploy
- name: gcr.io/$PROJECT_ID/kustomize
  id: Inject suffix
  dir: kustomize
  args:
  - edit
  - set
  - namesuffix
  - '-dev'
  env:
  - CLOUDSDK_COMPUTE_ZONE=$_ZONE
  - CLOUDSDK_CONTAINER_CLUSTER=$_CLUSTER
  - GCLOUD_PROJECT=$_NAME

- name: gcr.io/$PROJECT_ID/kustomize
  id: Inject image name
  dir: kustomize
  args:
  - edit
  - set
  - image
  - '$PROJECT_ID-image=gcr.io/$PROJECT_ID/prototip-2:$TAG_NAME'
  env:
  - CLOUDSDK_COMPUTE_ZONE=$_ZONE
  - CLOUDSDK_CONTAINER_CLUSTER=$_CLUSTER
  - GCLOUD_PROJECT=$_NAME

- name: gcr.io/$PROJECT_ID/kustomize
  id: Deploy
  args:
  - build
  - kustomize/
  env:
  - APPLY=true
  - CLOUDSDK_COMPUTE_ZONE=$_ZONE
  - CLOUDSDK_CONTAINER_CLUSTER=$_CLUSTER
  - GCLOUD_PROJECT=$_NAME

timeout: 2400s

